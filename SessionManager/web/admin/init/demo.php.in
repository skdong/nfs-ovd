<?php
/**
 * Copyright (C) 2008-2012 Ulteo SAS
 * http://www.ulteo.com
 * Author Laurent CLOUET <laurent@ulteo.com> 2008-2010
 * Author Julien LANGLOIS <julien@ulteo.com> 2012
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; version 2
 * of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 **/
require_once('@DATADIR@/ulteo/sessionmanager/admin/includes/core.inc.php');

$server_external_name = "";
$res1 = shell_exec('unset LANG; ifconfig -a | grep "inet addr" | cut -d: -f2 | cut -d\' \' -f1');
$res2 = explode("\n", $res1);
foreach ($res2 as $ip) {
	if ($ip != '127.0.0.1') {
		$server_external_name = $ip;
		break;
	}
}

// users
$userDB = UserDB::getInstance();
$res = $userDB->populate(false);
if (!$res) {
	Logger::error('main', 'demo.php failed to populate users');
	die();
}

// users group
$userGroupDB = UserGroupDB::getInstance();
$usersGroup = new UsersGroup(NULL, 'all_users', 'all_users', 1);
$res = $userGroupDB->add($usersGroup);
if (!$res) {
	Logger::error('main', 'demo.php failed to add usergroup');
	die();
}

try {
	$prefs = new Preferences_admin();
}
catch (Exception $e) {
	Logger::error('main', 'error 4');
	die();
}

$mods_enable = $prefs->set('general', 'user_default_group', $usersGroup->getUniqueID());
if (! $prefs->backup()) {
	Logger::error('main', 'demo.php failed set usergroup as default usergroup');
	die();
}

// application group
$ApplicationsGroupDB = ApplicationsGroupDB::getInstance();
$appsGroup = new AppsGroup(NULL, 'some_linux_apps', 'some_linux_apps', 1);
$res = $ApplicationsGroupDB->add($appsGroup);
if (!$res) {
	Logger::error('main', 'demo.php failed add application group');
	die();
}

// publication
$ret = Abstract_Liaison::save('UsersGroupApplicationsGroup', $usersGroup->getUniqueID(), $appsGroup->id);
if ($ret !== true) {
	Logger::error('main', 'demo.php failed make publication');
	die();
}

// server
$server = Abstract_Server::load('127.0.0.1');
if (! is_object($server)) {
	Logger::error('main', 'demo.php failed to load server');
	die();
}
$server->register();
$server->setAttribute('external_name', $server_external_name);
$server->setAttribute('locked', false);
Abstract_Server::save($server);

$applications = $server->getApplications();
if (is_array($applications)) {
	foreach ($applications as $application) {
		$ret = Abstract_Liaison::save('AppsGroup', $application->getAttribute('id'), $appsGroup->id);
		if ($ret !== true) {
			Logger::error('main', 'demo.php failed add application to application group');
			die();
		}
	}
}
