#!/bin/sh

# Copyright (C) 2008-2010 Ulteo SAS
# Author: Gauvain Pocentek <gauvain@ulteo.com> 2008-2009
# Author: Samuel BOVEE <samuel@ulteo.com> 2010
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, version 2
# of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

PROGRAM=$(basename $0)

CONFFILE=@CONFDIR@/config.inc.php
LOGDIR=@LOCALSTATEDIR@/log/ulteo
SPOOLDIR=@LOCALSTATEDIR@/spool/ulteo
BASEDIR=@LOCALSTATEDIR@/cache/ulteo/sessionmanager

# helper functions
die () {
    echo $@
    exit 1
}

usage ()
{
    echo -n "Usage: $PROGRAM [--no-download] [--chroot-uri uri] [--chroot-url url] [--copy] [--chroot-dir dir]"
    echo -n " [--admin-login login] [--admin-pwd pwd] [--version|-v] [--help|-h]"
    echo "Configure an Ulteo Session Manager (Open Virtual Desktop)"
    echo
    echo "  --no-download        don't get the chroot, assume it is already installed"
    echo "  --chroot-uri url     get the chroot from 'uri'"
    echo "                       recognised protocoles are http://, ftp:// and file://"
    echo "                       (default: http://www.ulteo.com/main/downloads/ulteo-ovd.php?suite=3.0)"
    echo "  --chroot-url url     same as --chroot-uri, for backward compatibility"
    echo "  --copy               if the chroot is a file, copy it in the Session Manager dir"
    echo "                       (a symlink is created by default)"
    echo "  --chroot-dir dir     downlaod the chroot as dir/base.tar.gz"
    echo "                       (default: $BASEDIR/base.tar.gz)"
    echo "  --admin-login login  set the admin login to 'login'"
    echo "  --admin-pwd pwd      set the admin password to 'pwd'"
    echo "  --assume-yes         don't ask confirmation"
    echo "                       (default: guess from /etc/{httpd,apache2})"
    echo "  --help|-h            display this help"
    echo "  --version|-v         display version informations"
}

unset NODOWNLOAD
unset LOGIN
unset PASS1
unset PASS2
unset URI
unset COPY
unset TARGET
NOCONFIRM=0
while [ x"$1" != x"" ]; do
    case $1 in
        --no-download)
            NODOWNLOAD="ok";;
        --chroot-url|--chroot-uri)
            URI="$2"
            shift;;
        --copy)
            COPY="yes"
            ;;
        --chroot-dir)
            TARGET="$2"
            shift;;
        --admin-login)
            LOGIN="$2"
            shift;;
        --admin-pwd)
            PASS1="$2"
            PASS2="$2"
            shift;;
        --assume-yes)
            NOCONFIRM=1;;
        --help|-h)
            usage
            exit 0;;
        --version|-h)
            echo $PROGRAM @PKG_VERSION@
            exit 0;;
        *)
            usage
            exit 1;;
    esac
    shift
done

while [ -z "$LOGIN" ]; do
    echo -n "Admin login: "
    read LOGIN
done

stty_orig=$(stty -g)
while [ -z "$PASS" ]; do
    while [ -z "$PASS1" ]; do
        echo -n "Password: "
        stty -echo
        read PASS1
        stty $stty_orig
        echo
    done
    while [ -z "$PASS2" ]; do
        echo -n "Retype password: "
        stty -echo
        read PASS2
        stty $stty_orig
        echo
    done

    if [ "$PASS1" = "$PASS2" ]; then
        PASS=$(echo -n $PASS1 | md5sum | cut -d " " -f 1)
    else
        echo "Passwords don't match... try again."
    fi

    unset PASS1
    unset PASS2
done

if [ -z "$NODOWNLOAD" ]; then
    PROPOSED_URL='http://www.ulteo.com/main/downloads/ulteo-ovd.php?suite=3.0'
    PROPOSED_TARGET=$BASEDIR/base.tar.gz
    if [ -z "$URI" ]; then
        echo -n "Chroot download url [$PROPOSED_URL]: "
        read URI
        if [ -z "$URI" ]; then
            URI=$PROPOSED_URL
        fi
    fi
    case $URI in
    http://*|ftp://*)
        echo -n "Chroot destination [$PROPOSED_TARGET]: "
        read TARGET
        if [ -z "$TARGET" ]; then
            TARGET=$PROPOSED_TARGET
        fi
        if [ -d "$TARGET" ]; then
            TARGET="$TARGET"/base.tar.gz
        fi
        ;;
    *)
        # noop
        ;;
    esac
fi

echo
echo "Options:"
echo -n "* chroot download:  "
if [ -z "$NODOWNLOAD" ]; then
    echo "yes"
    echo "* chroot URI:       $URI"
    echo "* chroot directory: $TARGET"
else
    echo "no"
fi

if [ "$NOCONFIRM" -ne 1 ]; then
    echo
    echo -n "Is this correct? [Y/n] "
    read GO
    [ -z "$GO" ] && GO=Y
    case $GO in
        Y|y)
            # continue
            ;;
        *)
            echo "Aborting."
            exit 0
            ;;
    esac
fi

[ -n "$OVDDEBUG" ] && exit 0

sed -r -i "s,^(.*SESSIONMANAGER_ADMIN_LOGIN.*').*('.*)$,\1$LOGIN\2," $CONFFILE
sed -r -i "s,^(.*SESSIONMANAGER_ADMIN_PASSWORD.*').*('.*)$,\1$PASS\2," $CONFFILE

if [ -z "$NODOWNLOAD" ]; then
    case $URI in
    http://*|ftp://*)
        mkdir -p $(dirname $TARGET)
        curl --retry 3 --connect-timeout 60 -L -f "$URI" > $TARGET || die An error occured while downloading the chroot. Aborting.
        # Create a symlink to $BASEDIR/base.tar.gz if this file doesn't exist
        [ ! -e "$BASEDIR/base.tar.gz" ] && ln -sf "$TARGET" "$BASEDIR/base.tar.gz"
        ;;

    file://*)
        path=${URI#file://}
        [ ! -e $path ] && die $URI does not exist. Aborting.
        if [ -n "$COPY" ]; then
            echo "Copying the archive to $BASEDIR/base.tar.gz."
            cp "$path" "$BASEDIR/base.tar.gz" || die Unable to copy $path to $BASEDIR/base.tar.gz. Aborting
        else
            ln -sf "$path" "$BASEDIR/base.tar.gz" || die Unable to link $path to $BASEDIR/base.tar.gz. Aborting.
        fi
        ;;

    *)
        die Unrecognized protocol \($URI\)
        ;;
    esac
fi


echo "Configuration done."
echo "Please reload the web server configuration to enable the service."

exit 0
