#!/bin/bash -e

. /usr/share/debconf/confmodule

unset LANG

DRBD_RESOURCE="sm0"
DRBD_CONF=/etc/drbd.d/$DRBD_RESOURCE.res
DRBD_DEVICE=/dev/drbd0
DRBD_MOUNT_DIR=/var/cache/ulteo/ha/drbd

HEARTBEAT_CONF_DIR=/etc/ha.d
HEARTBEAT_CRM_DIR=/var/lib/heartbeat/crm

HA_CONF_DIR=/etc/ulteo/ovd/ha
HA_DEFAULTCONF_DIR=/usr/share/ulteo/ovd/ha/conf
HA_VARLIB_DIR=/var/lib/ulteo/ovd
HA_LOG=/var/log/ha_install.log

SM_LOG_DIR=/var/log/ulteo/sessionmanager
SM_SPOOL_DIR=/var/spool/ulteo/sessionmanager
SM_DATA_DIR=/usr/share/ulteo/sessionmanager

MYSQL_DB=/var/lib/mysql
AUTH_KEY=`date '+%m%d%y%H%M%S'`

rm -rf $HA_CONF_DIR $HA_VARLIB_DIR
mkdir -p $HA_CONF_DIR $HA_VARLIB_DIR

drbd_install()
{
    modprobe drbd

    # stop all services
    service mysql stop >> $HA_LOG 2>&1 || true
    service apache2 stop >> $HA_LOG
    service heartbeat stop >> $HA_LOG

    # Create a virtual block device of 250M
    dd if=/dev/zero of=$HA_VARLIB_DIR/vbd0.bin count=500k 2>> $HA_LOG

    local drbd_loop=$(losetup -f)
    losetup $drbd_loop $HA_VARLIB_DIR/vbd0.bin

    # generate /etc/drbd.d/sm0.res
    sed -e "s/%RESOURCE%/$DRBD_RESOURCE/" -e "s,%DEVICE%,$DRBD_DEVICE," \
        -e "s,%LOOP%,$drbd_loop," -e "s/%AUTH_KEY%/$AUTH_KEY/"  \
        -e "s/%HOSTNAME%/$HOSTNAME/" -e "s/%NIC_ADDR%/$NIC_ADDR/" \
        $HA_DEFAULTCONF_DIR/$DRBD_RESOURCE.res > $DRBD_CONF

    # prepare and clean drbd
    umount $DRBD_DEVICE 2>> $HA_LOG || true
    drbdadm down $DRBD_RESOURCE

    # create drbd resource
    drbdadm create-md $DRBD_RESOURCE >> $HA_LOG 2>&1
    drbdadm up $DRBD_RESOURCE 2>> $HA_LOG || true

    # create drbd mount directory
    mkdir -p $DRBD_MOUNT_DIR

    if [ $1 == "M" ]; then
        # Check if overwrite of peer is necessary
        drbdadm -- --overwrite-data-of-peer primary $DRBD_RESOURCE

        # Create ext3 FS
        mkfs.ext3 $DRBD_DEVICE >> $HA_LOG 2>&1

        # Copy MySQL DB to VDB0
        mount $DRBD_DEVICE $DRBD_MOUNT_DIR
        cp -a $MYSQL_DB $SM_SPOOL_DIR $DRBD_MOUNT_DIR
        umount $DRBD_MOUNT_DIR

    elif [ $1 == "S" ]; then
        drbdadm adjust $DRBD_RESOURCE || true

        #Synchronize data
        var_role=`drbdadm role $DRBD_RESOURCE | grep -E 'Secondary/Primary|Secondary/Seco    ndary' || true`
        if [ -n "$var_role" ]; then
            drbdadm invalidate-remote $DRBD_RESOURCE
            for i in $(seq 0 60); do
                [ $(drbdadm dstate $DRBD_RESOURCE) -eq "UpToDate/UpToDate" ] && break
                sleep 1
            done
        fi
    fi
    drbdadm down $DRBD_RESOURCE
}


heartbeat_install()
{
    # create logs files
    mkdir -p $SM_LOG_DIR
    touch $SM_LOG_DIR/ha.log $SM_LOG_DIR/ha-hb.log $SM_LOG_DIR/ha-debug-hb.log
    chown www-data:www-data  $SM_LOG_DIR/ha.log
    chown hacluster:haclient $SM_LOG_DIR/ha-hb.log $SM_LOG_DIR/ha-debug-hb.log

    # generate ha.cf file
    sed -e "s/%GATEWAY%/$GATEWAY/" -e "s/%NIC_NAME%/$NIC_NAME/" \
        -e "s/%NIC_ADDR%/$NIC_ADDR/" -e "s/%HOSTNAME%/$HOSTNAME/" \
        -e "s,%LOGDIR%,$SM_LOG_DIR," $HA_DEFAULTCONF_DIR/ha.cf > $HEARTBEAT_CONF_DIR/ha.cf

    # generate authkeys file
    echo -e "auth 1\n1 sha1 $AUTH_KEY" > $HEARTBEAT_CONF_DIR/authkeys
    chmod 600 $HEARTBEAT_CONF_DIR/authkeys

    # Delete old cibs
    [ -e $HEARTBEAT_CRM_DIR/cib.xml ] && rm -f $HEARTBEAT_CRM_DIR/*

    service heartbeat start >> $HA_LOG 2>&1
}


heartbeat_cib_install()
{
    echo -n "Waiting connection to CRM. It may take some time"
    for i in $(seq 1 60); do
        [ $i -eq 60 ] && echo "Connection timeout to the cluster" && break
        crm_mon -1 | grep -E "[1-9] Nodes configured" && break || true
        echo -n "." && sleep 5
    done

    # prevent current CIB modifications
    echo "" && sleep 5

    # change VIP in HA conf file
    db_get ulteo-ovd-ha/vip && local vip="$RET"
    sed -i "/VIP/c VIP=${vip}" $HA_CONF_DIR/resources.conf

    # configure the CRM
    crm_attribute --type nodes --node $HOSTNAME --name standby --update on
    sed -e "s,%MOUNT_DIR%,$DRBD_MOUNT_DIR," -e "s,%MYSQL_DB%,$MYSQL_DB," \
        -e "s,%SM_SPOOL_DIR%,$SM_SPOOL_DIR," -e "s/%DRBD_RESOURCE%/$DRBD_RESOURCE/" \
        -e "s/%VIP%/$vip/" $HA_DEFAULTCONF_DIR/crm.conf | crm configure 2>> $HA_LOG
    crm_attribute --type nodes --node $HOSTNAME --name standby --update off
}


set_ha_register_to_master()
{
    db_get ulteo-ovd-ha/mip && MIP="$RET"
    response=$(wget --no-check-certificate --post-data="action=register&hostname=$HOSTNAME" \
        https://$MIP/ovd/admin/ha/registration.php -O - 2>> $HA_LOG || true)
    [ "$response" = "ok" ] || echo "Slave not registered"
}


db_get ulteo-ovd-ha/hostname && HOSTAME="$RET"
db_get ulteo-ovd-ha/gateway && GATEWAY="$RET"

db_get ulteo-ovd-ha/nic && NIC_NAME="$RET"
sed "s/%NIC_NAME%/$NIC_NAME/" $HA_DEFAULTCONF_DIR/resources.conf \
    > $HA_CONF_DIR/resources.conf
NIC_ADDR=$(ifconfig $NIC_NAME | awk -F":| +" '/inet addr/{print $4}')

db_get ulteo-ovd-ha/mode && MODE="$RET"
case $MODE in
    master)
        drbd_install "M"
        heartbeat_install
        heartbeat_cib_install
    ;;
    slave)
        drbd_install "S"
        heartbeat_install
        set_ha_register_to_master
        service mysql start || true
        service apache2 start
    ;;
esac

#DEBHELPER#

exit 0
